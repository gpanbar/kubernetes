#kubectl run nginx --image=nginx   (deployment)
#kubectl run nginx --image=nginx --restart=Never   (pod)
#kubectl run nginx --image=nginx --restart=OnFailure   (job)  
#kubectl run nginx --image=nginx  --restart=OnFailure --schedule="* * * * *" (cronJob)

#kubectl run frontend --replicas=2 --labels=run=load-balancer-example --image=busybox  --port=8080
#kubectl expose deployment frontend --type=NodePort --name=frontend-service --port=6262 --target-port=8080
#kubectl set serviceaccount deployment frontend myuser
#kubectl create service clusterip my-cs --tcp=5678:8080 --dry-run -o yaml

#kubectl create quota my-quota --hard=cpu=1,memory=1G,pods=2,services=3,replicationcontrollers=2,resourcequotas=1,secrets=5,persistentvolumeclaims=10


#kubectl run nginx 
#    --image=nginx 
#    --restart=Never 
#    --port=80 
#    --namespace=myname 
#    --command --serviceaccount=mysa1 
#    --env=HOSTNAME=local 
#    --labels=bu=finance,env=dev  
#    --requests='cpu=100m,memory=256Mi' 
#    --limits='cpu=200m,memory=512Mi' 
#    --dry-run 
#    -o yaml 
#    -- /bin/sh -c 'echo hello world'



apiVersion: v1
kind: Pod
metadata:
  labels:
    bu: finance
    env: dev
  name: nginx
  namespace: myname
spec:
  containers:
  - command:
    - /bin/sh
    - -c
    - echo hello world
    env:
    - name: HOSTNAME
      value: local
    image: nginx
    name: nginx
    ports:
    - containerPort: 80
    resources:
      limits:
        cpu: 200m
        memory: 512Mi
      requests:
        cpu: 100m
        memory: 256Mi
  dnsPolicy: ClusterFirst
  restartPolicy: Never
  serviceAccountName: mysa1
status: {}
